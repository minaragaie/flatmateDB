// <auto-generated />
using System;
using FlatmateAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlatmateAPI.Migrations
{
    [DbContext(typeof(FlatmateDBContext))]
    partial class FlatmateDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("FlatmateAPI.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Edited")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("FlatmateAPI.Models.Duty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AssignedToId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DutyTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Edited")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsImportant")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStarred")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("MarkAsDone")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("OnProcess")
                        .HasColumnType("bit");

                    b.Property<string>("PrimaryColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Privilege")
                        .HasColumnType("int");

                    b.Property<bool>("Repeat")
                        .HasColumnType("bit");

                    b.Property<string>("SecondaryColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("DutyTypeId");

                    b.HasIndex("HouseId");

                    b.HasIndex("UserId");

                    b.ToTable("Duty");
                });

            modelBuilder.Entity("FlatmateAPI.Models.DutyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Label")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("DutyType");
                });

            modelBuilder.Entity("FlatmateAPI.Models.GroceryList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsStarred")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Privilige")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.HasIndex("UserId");

                    b.ToTable("GroceryList");
                });

            modelBuilder.Entity("FlatmateAPI.Models.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("House");
                });

            modelBuilder.Entity("FlatmateAPI.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditiedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroceryListId")
                        .HasColumnType("int");

                    b.Property<bool>("HasBeenPurchased")
                        .HasColumnType("bit");

                    b.Property<int?>("HouseId")
                        .HasColumnType("int");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quanitiy")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GroceryListId");

                    b.HasIndex("HouseId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("FlatmateAPI.Models.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("ItemType");
                });

            modelBuilder.Entity("FlatmateAPI.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HasAttatchment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.HasIndex("UserId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("FlatmateAPI.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("FlatmateAPI.Models.User", b =>
                {
                    b.Property<string>("UID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApiKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastLoginAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FlatmateAPI.Models.UserInvitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HouseId")
                        .HasColumnType("int");

                    b.Property<string>("InviteeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InviterId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.HasIndex("InviteeId");

                    b.HasIndex("InviterId");

                    b.ToTable("UserInvitation");
                });

            modelBuilder.Entity("HouseUser", b =>
                {
                    b.Property<int>("HousesId")
                        .HasColumnType("int");

                    b.Property<string>("UsersUID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("HousesId", "UsersUID");

                    b.HasIndex("UsersUID");

                    b.ToTable("HouseUser");
                });

            modelBuilder.Entity("ItemStore", b =>
                {
                    b.Property<int>("ItemsId")
                        .HasColumnType("int");

                    b.Property<int>("StoresId")
                        .HasColumnType("int");

                    b.HasKey("ItemsId", "StoresId");

                    b.HasIndex("StoresId");

                    b.ToTable("ItemStore");
                });

            modelBuilder.Entity("FlatmateAPI.Models.Comment", b =>
                {
                    b.HasOne("FlatmateAPI.Models.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlatmateAPI.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId");

                    b.HasOne("FlatmateAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("House");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlatmateAPI.Models.Duty", b =>
                {
                    b.HasOne("FlatmateAPI.Models.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId");

                    b.HasOne("FlatmateAPI.Models.DutyType", "Type")
                        .WithMany("Duties")
                        .HasForeignKey("DutyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlatmateAPI.Models.House", "House")
                        .WithMany("Duties")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlatmateAPI.Models.User", "DutyCreator")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("AssignedTo");

                    b.Navigation("DutyCreator");

                    b.Navigation("House");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("FlatmateAPI.Models.GroceryList", b =>
                {
                    b.HasOne("FlatmateAPI.Models.House", "House")
                        .WithMany("GroceryLists")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlatmateAPI.Models.User", "ListCreator")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("House");

                    b.Navigation("ListCreator");
                });

            modelBuilder.Entity("FlatmateAPI.Models.House", b =>
                {
                    b.HasOne("FlatmateAPI.Models.User", "Owner")
                        .WithMany("OwnedHouses")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("FlatmateAPI.Models.Item", b =>
                {
                    b.HasOne("FlatmateAPI.Models.GroceryList", "GroceryList")
                        .WithMany("Items")
                        .HasForeignKey("GroceryListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlatmateAPI.Models.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId");

                    b.HasOne("FlatmateAPI.Models.ItemType", "Type")
                        .WithMany("Items")
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlatmateAPI.Models.User", "AddedBy")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("AddedBy");

                    b.Navigation("GroceryList");

                    b.Navigation("House");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("FlatmateAPI.Models.Post", b =>
                {
                    b.HasOne("FlatmateAPI.Models.House", "House")
                        .WithMany("Posts")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlatmateAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("House");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlatmateAPI.Models.UserInvitation", b =>
                {
                    b.HasOne("FlatmateAPI.Models.House", "House")
                        .WithMany()
                        .HasForeignKey("HouseId");

                    b.HasOne("FlatmateAPI.Models.User", "Invitee")
                        .WithMany()
                        .HasForeignKey("InviteeId");

                    b.HasOne("FlatmateAPI.Models.User", "Inviter")
                        .WithMany()
                        .HasForeignKey("InviterId");

                    b.Navigation("House");

                    b.Navigation("Invitee");

                    b.Navigation("Inviter");
                });

            modelBuilder.Entity("HouseUser", b =>
                {
                    b.HasOne("FlatmateAPI.Models.House", null)
                        .WithMany()
                        .HasForeignKey("HousesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlatmateAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ItemStore", b =>
                {
                    b.HasOne("FlatmateAPI.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlatmateAPI.Models.Store", null)
                        .WithMany()
                        .HasForeignKey("StoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlatmateAPI.Models.DutyType", b =>
                {
                    b.Navigation("Duties");
                });

            modelBuilder.Entity("FlatmateAPI.Models.GroceryList", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FlatmateAPI.Models.House", b =>
                {
                    b.Navigation("Duties");

                    b.Navigation("GroceryLists");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("FlatmateAPI.Models.ItemType", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FlatmateAPI.Models.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("FlatmateAPI.Models.User", b =>
                {
                    b.Navigation("OwnedHouses");
                });
#pragma warning restore 612, 618
        }
    }
}
